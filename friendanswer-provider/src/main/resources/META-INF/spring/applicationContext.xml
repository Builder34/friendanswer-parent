<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd"
    default-lazy-init="true">

	<description>Spring公共配置</description>
	<!--开启注解 -->
	<context:annotation-config />
	<context:component-scan base-package="com.lkcb.friendanswer.provider.service" />
	<!-- 开启注解事务支持 -->	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSourceDruid"/>
	</bean>
	<!-- 通过BeanFactoryAware，手动从spring容器获取bean -->
    <!--<bean class="com.lkcb.friendanswer.provider.utils.SpringContextHolder"  lazy-init="false" />-->
	<bean id="dataSourceDruid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://10.3.19.12:3306/friendanswer_db?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDruid" />
	</bean>
	<!-- 会自动将basePackage中配置的包路径下Mapper接口生成代理类，实现数据访问 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lkcb.friendanswer.common.dao" />
		<!--不能配此项,否则使用不了上面的context:property-placeholder,解决如下-->
		<!--<property name="sqlSessionFactory" ref="sqlSessionFactory" />-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<import resource="classpath:META-INF/spring/dubbo-provider.xml" />
</beans>
