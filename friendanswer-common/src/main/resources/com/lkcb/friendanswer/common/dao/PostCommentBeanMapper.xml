<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lkcb.friendanswer.common.dao.PostCommentBeanMapper" >
  <resultMap id="BaseResultMap" type="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="previous_id" property="previousId" jdbcType="BIGINT" />
    <result column="post_id" property="postId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lkcb.friendanswer.common.bean.PostCommentBean" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="comment_content" property="commentContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_id, previous_id, post_id, user_id, comment_time
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fa_post_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from fa_post_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fa_post_comment (comment_id, previous_id, post_id, 
      user_id, comment_time, comment_content
      )
    values (#{commentId,jdbcType=BIGINT}, #{previousId,jdbcType=BIGINT}, #{postId,jdbcType=BIGINT}, 
      #{userId,jdbcType=INTEGER}, #{commentTime,jdbcType=TIMESTAMP}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fa_post_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="previousId != null" >
        previous_id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="previousId != null" >
        #{previousId,jdbcType=BIGINT},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fa_post_comment
    <set >
      <if test="previousId != null" >
        previous_id = #{previousId,jdbcType=BIGINT},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fa_post_comment
    set previous_id = #{previousId,jdbcType=BIGINT},
      post_id = #{postId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lkcb.friendanswer.common.bean.PostCommentBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fa_post_comment
    set previous_id = #{previousId,jdbcType=BIGINT},
      post_id = #{postId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>